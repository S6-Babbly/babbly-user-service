name: User Service CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  IMAGE_NAME: babbly-user-service

jobs:
  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    needs: backend-tests
    if: (needs.backend-tests.result == 'success' || needs.backend-tests.result == 'skipped')
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # SonarCloud needs full history

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "temurin"

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "9.0.x"

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~\\sonar\\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=S6-Babbly_babbly-user-service
            -Dsonar.organization=babblyisgeweldig
            -Dsonar.sources=.
            -Dsonar.exclusions=**/node_modules/**,**/bin/**,**/obj/**,**/*.test.js,**/*.spec.js

  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "9.0.x"

      - name: Restore dependencies
        run: dotnet restore ./babbly-user-service.sln

      - name: Build
        run: dotnet build ./babbly-user-service.sln --no-restore

      - name: Test
        run: dotnet test ./babbly-user-service.sln --no-build --verbosity normal --logger "trx;LogFileName=test-results.trx"

  docker-build-and-push:
    name: Docker Build and Push to Docker Hub
    runs-on: ubuntu-latest
    needs: [code-quality, backend-tests]
    if: |
      github.event_name == 'push' && github.ref == 'refs/heads/main' &&
      (needs.code-quality.result == 'success' || needs.code-quality.result == 'skipped') &&
      (needs.backend-tests.result == 'success' || needs.backend-tests.result == 'skipped')
    steps:
      - uses: actions/checkout@v3

      - name: Docker Hub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
          # Add build-args for environment variables if needed during build time
          # build-args: |
          #   ASPNETCORE_ENVIRONMENT=Production
