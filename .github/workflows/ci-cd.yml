name: User Service CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 100 # Shallow clones should be disabled for better relevancy of SonarCloud analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: "temurin"

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.sources=.
            -Dsonar.exclusions=**/node_modules/**,**/bin/**,**/obj/**,**/*.test.js,**/*.spec.js
            -Dsonar.cs.opencover.reportsPaths=**/coverage.opencover.xml

  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "9.0.x"

      - name: Restore dependencies
        run: dotnet restore babbly-user-service.sln

      - name: Build
        run: dotnet build babbly-user-service.sln --no-restore

      - name: Test
        run: dotnet test babbly-user-service.sln --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage

      # Uncomment when tests are added
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v3
      #   with:
      #     directory: ./coverage

  docker-build:
    name: Docker Build and Publish
    runs-on: ubuntu-latest
    needs: [code-quality, backend-tests]
    if: |
      always() &&
      (needs.code-quality.result == 'success' || needs.code-quality.result == 'skipped') &&
      (needs.backend-tests.result == 'success' || needs.backend-tests.result == 'skipped')
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create .env file
        run: |
          echo "ASPNETCORE_ENVIRONMENT=Development" > .env
          echo "ConnectionStrings__DefaultConnection=Host=db;Database=babbly-users;Username=babbly_user;Password=babbly_password;" >> .env

      - name: Build and push User Service
        run: |
          # Always build the image
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/babbly-user-service:${{ github.sha }} .

          # Only push to DockerHub on main branch
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            docker tag ${{ secrets.DOCKERHUB_USERNAME }}/babbly-user-service:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/babbly-user-service:latest
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/babbly-user-service:${{ github.sha }}
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/babbly-user-service:latest
          fi

      - name: Verify container starts
        run: |
          docker run --rm -d --name test-backend ${{ secrets.DOCKERHUB_USERNAME }}/babbly-user-service:${{ github.sha }}
          sleep 5
          docker logs test-backend
          docker stop test-backend 
